[tool.poetry]
name = "pyprotostuben"
version = "0.0.1"
description = ""
authors = ["zerlok <danil.troshnev@gmail.com>"]
readme = "README.md"

[tool.poetry.scripts]
protoc-gen-pyprotostuben = "pyprotostuben.protoc:gen_mypy_stub"
protoc-gen-echo = "pyprotostuben.protoc:echo"

[tool.poetry.dependencies]
python = "^3.9"
protobuf = "^5.26.1"

[tool.poetry.group.dev.dependencies]
types-protobuf = "^5.26.0.20240422"
mypy = "^1.10.0"
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
ruff = "^0.4.9"
grpc-stubs = "^1.53.0.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
include = ["src/**/*.py", "tests/**/*.py"]
line-length = 120

[tool.ruff.lint]
select = ["A", "ARG", "ASYNC", "B", "BLE", "C", "C4", "COM", "DTZ", "E", "EM", "ERA", "EXE", "F", "FLY", "G", "I",
    "ICN", "INP", "ISC", "LOG", "N", "PERF", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "Q", "R", "RSE", "RUF", "S", "SIM",
    "SLOT", "T", "T10", "T20", "TID", "TRY", "U", "UP", "W", "YTT"]
ignore = [
    "RET505", # clashes with mypy exhaustiveness check
    "S101", # allow asserts for tests checks and mypy help
]

[tool.mypy]
files = ["src", "tests"]
strict = true

[tool.pytest.ini_options]
pythonpath = [
    "src",
]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
]
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abc.abstractmethod",
    "if __name__ == .__main__.:",
]
show_missing = true
